<script src="/static/admin/js/pusher.min.js"></script>
<script>
    let pusher = new Pusher("{{.PreferenceMap["pusher-key"]}}", {
        authEndPoint: "/pusher/auth",
        wsHost: "localhost",
        wsPort: 4001,
        forceTLS: false,
        enabledTransports: ["ws", "wss"],
        disabledTransports: [],
    });

    let publicChannel = pusher.subscribe("public-channel");

    publicChannel.bind("test-event", data => {
        successAlert(data.message);
    })

    let attention = Prompt();

    {{if .Flash != ""}}
        successAlert('{{.Flash}}')
    {{end}}

    {{if .Warning != ""}}
        warningAlert('{{.Warning}}')
    {{end}}

    {{if .Error != ""}}
        errorAlert('{{.Error}}')
    {{end}}

    document.addEventListener("DOMContentLoaded", function() {
        let tabMap = new Map();
        let tabs = document.querySelectorAll('[data-toggle="tab"]');
        let i = 0;
        Array.prototype.filter.call(tabs, function (el) {
            el.addEventListener("click", function () {
                history.pushState("", document.title, window.location.pathname);
                localStorage.setItem('activeTab', el.getAttribute("data-target"));
            })
            // add it to map
            tabMap.set(el.getAttribute("href"), i);
            i++;
        });

        // show last selected tab, if exists
        if (!window.location.hash) {
            let activeTab = localStorage.getItem('activeTab');
            if (activeTab) {
                document.querySelectorAll('[data-toggle="tab"]')[activeTab].Tab.show()
            }
        } else {
            // there is a hash in the url, so show appropriate tab
            if (tabMap.has(window.location.hash)) {
                document.querySelectorAll('[data-toggle="tab"]')[tabMap.get(window.location.hash)].Tab.show()
            }
        }

        let monitoringChk = document.getElementById("monitoring-live");
        monitoringChk.addEventListener("change", function () {
            let enabled = monitoringChk.checked;
            if (!enabled) {
                attention.confirm({
                    html: "This will stop monitoring of all hosts and services. Are you sure?",
                    callback: result => {
                        if (result) {
                            // want to turn monitoring off
                            console.log("Would turn monitoring off");
                        } else {
                            monitoringChk.checked = true;
                        }
                    }
                })
            } else {

            }
        })
    })
</script>
